{
  "conflicting": {

  },
  "long_description": "",
  "description": "Installs and configures Riak distributed data store (v0.10 and later)",
  "providing": {

  },
  "maintainer": "Basho Technologies, Inc.",
  "attributes": {
    "riak\/kv\/storage_backend_options\/small_file_threshold": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "10485760",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Small file threshold"
    },
    "riak\/erlang": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "type": "hash",
      "recipes": [

      ],
      "display_name": "Erlang configuration"
    },
    "riak\/package\/prefix": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "\/usr\/local",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Installation prefix",
      "description": "Installation prefix for source installs"
    },
    "riak\/package\/version\/major": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "0",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Riak major version",
      "description": "Major version of Riak to install."
    },
    "riak\/kv\/pb_ip": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "127.0.0.1",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Protocol Buffers Client (PBC) address",
      "description": "The IP address on which Riak's PBC interface should listen"
    },
    "riak\/kv\/handoff_concurrency": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "type": "string",
      "recipes": [

      ],
      "display_name": "Handoff concurrency",
      "description": "Number of vnode, per physical node, allowed to perform handoff at once."
    },
    "riak\/erlang\/cookie": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "riak",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Erlang cookie",
      "description": "The cookie of the Erlang node"
    },
    "riak\/kv\/pb_port": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "8087",
      "type": "string",
      "recipes": [

      ],
      "display_name": " Protocol Buffers Client (PBC) port",
      "description": "The port on which Riak's PBC interface should listen"
    },
    "riak\/kv\/riak_kv_stat": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "true",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Statistics reporting",
      "description": "Enables the statistics-aggregator if set to true."
    },
    "riak\/kv\/mapred_name": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "mapred",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Map\/Reduce base path",
      "description": "The base of the path in the URL exposing Riak's Map\/Reduce interface"
    },
    "riak\/kv\/js_source_dir": {
      "default_name": "Javascript source directory",
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "type": "string",
      "recipes": [

      ],
      "description": "Where to load user-defined built in Javascript functions"
    },
    "riak\/core\/web_ip": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "127.0.0.1",
      "type": "string",
      "recipes": [

      ],
      "display_name": "HTTP address",
      "description": "The IP address on which Riak's HTTP interface should listen (default: 127.0.0.1)"
    },
    "riak\/erlang\/node_name": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "riak@127.0.0.1",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Erlang node name",
      "description": "The name of the Erlang node"
    },
    "riak\/kv\/storage_backend_options\/sync_strategy": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "none",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Sync strategy",
      "description": "Sync strategy is one of: :none (let the OS decide), :o_sync, or {:seconds => N} (which requires application support)"
    },
    "riak\/kv\/storage_backend_options\/data_root": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "\/var\/lib\/riak\/bitcask",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Data root directory",
      "description": "Directory where the data files will be stored."
    },
    "riak\/package\/kernel\/inet_dist_listen_min": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "6000",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Minimum port for Erlang node communication"
    },
    "riak\/kv\/storage_backend_options\/dead_bytes_merge_trigger": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "536870912",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Dead bytes merge trigger"
    },
    "riak\/kv\/storage_backend_options\/frag_merge_trigger": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "60",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Fragment merge trigger"
    },
    "riak\/kv\/storage_backend_options\/riak_kv_dets_backend_root": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "\/var\/lib\/riak\/dets",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Data root directory",
      "description": "Directory where the data files will be stored."
    },
    "riak\/kv\/storage_backend": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "riak_kv_bitcask_backend",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Storage backend",
      "description": "The module name of the storage backend that Riak should use."
    },
    "riak\/kv\/handoff_port": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "8099",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Handoff port",
      "description": "TCP port number for the handoff listener (default: 8099)"
    },
    "riak\/kv\/raw_name": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "riak",
      "type": "string",
      "recipes": [

      ],
      "display_name": "HTTP base path",
      "description": "The base of the path in the URL exposing Riak's HTTP interface."
    },
    "riak\/erlang\/env_vars": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "[\"ERL_MAX_PORTS 4096\", \"ERL_FULLSWEEP_AFTER 10\"]",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Additional Erlang environment variables"
    },
    "riak\/erlang\/async_threads": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "5",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Async thread pool size",
      "description": "Number of threads in the async thread pool"
    },
    "riak\/package\/version\/build": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "1344",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Riak binary package build version",
      "description": "For binary packages, the specific build to use."
    },
    "riak\/package": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "type": "hash",
      "recipes": [

      ]
    },
    "riak\/kv\/storage_backend_options\/data_home_dir": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "\/var\/lib\/riak\/innodb",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Data home directory",
      "description": "Directory where the system files will be created. All database directories will also be created relative to this path.  Note: The path must end in a \/ or \\ depending on the platform."
    },
    "riak\/kv\/storage_backend_options\/buffer_pool_size": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "2147483648",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Buffer pool size",
      "description": "Size of the buffer pool in bytes."
    },
    "riak\/kv": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "type": "hash",
      "recipes": [

      ],
      "display_name": "Riak key\/value",
      "description": "Riak key\/value system configuration"
    },
    "riak\/core\/web_port": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "8098",
      "type": "string",
      "recipes": [

      ],
      "display_name": "HTTP port",
      "description": "The port on which Riak's HTTP interface should listen (default: 8098)"
    },
    "riak\/package\/version\/incremental": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "0",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Riak incremental version",
      "description": "Incremental release of Riak to install."
    },
    "riak": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "type": "hash",
      "recipes": [

      ],
      "display_name": "Riak",
      "description": "Riak is a Dynamo-inspired key\/value store"
    },
    "riak\/kv\/storage_backend_options\/expiry_secs": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "-1",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Data expiration threshold, in seconds",
      "description": "Data expiration can be caused by setting this to a positive value.  If set, items older than the value will be discarded."
    },
    "riak\/kv\/storage_backend_options\/log_buffer_size": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "8388608",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Log buffer size",
      "description": "Size of the in-memory log buffer in bytes."
    },
    "riak\/core\/target_n_val": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "3",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Target N"
    },
    "riak\/core": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "type": "hash",
      "recipes": [

      ],
      "display_name": "Riak core",
      "description": "Riak core system configuration"
    },
    "riak\/kv\/storage_backend_options\/dead_bytes_threshold": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "134217728",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Dead bytes threshold"
    },
    "riak\/kv\/storage_backend_options": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "hash",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Storage backend options",
      "description": "Additional configuration options for storage backends (varies by storage_backend)"
    },
    "riak\/kv\/js_vm_count": {
      "default_name": "Javascript virtual machine count",
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "8",
      "type": "string",
      "recipes": [

      ],
      "description": "How many Javascript virtual machines to start (default: 8)"
    },
    "riak\/core\/ring_state_dir": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "\/var\/lib\/riak\/ring",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Ring state directory",
      "description": "The directory on-disk in which to store the ring state (default: data\/ring)"
    },
    "riak\/core\/default_bucket_props": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "type": "string",
      "recipes": [

      ],
      "display_name": "Default bucket properties"
    },
    "riak\/kv\/storage_backend_options\/flush_log_at_trx_commit": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "1",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Log flush policy",
      "description": "This variable can be set to 0, 1 or 2.\n\n                   0 - Force sync of log contents to disk once every second.\n\n                   1 - Force sync of log contents to disk at transaction commit.\n\n                   2 - Write log contents to disk at transaction commit but do not force sync.\n"
    },
    "riak\/kv\/storage_backend_options\/log_group_home_dir": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "\/var\/lib\/riak\/innodb",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Log file path",
      "description": "Path to the directory where the log files will be created."
    },
    "riak\/kv\/add_paths": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "type": "string",
      "recipes": [

      ],
      "display_name": "Additional Erlang paths",
      "description": "A list of paths to add to the Erlang code path"
    },
    "riak\/core\/gossip_interval": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "60000",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Gossip interval",
      "description": "Gossip interval in milliseconds"
    },
    "riak\/limit_port_range": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "true",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Limit port range",
      "description": "Boolean indicating whether to limit the range of ports used for Erlang node communication."
    },
    "riak\/package\/type": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "binary",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Package type",
      "description": "Package type for installation (source or binary)"
    },
    "riak\/kv\/storage_backend_options\/frag_threshold": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "40",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Fragment threshold"
    },
    "riak\/core\/ring_creation_size": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "64",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Ring creation size",
      "description": "The number of partitions into which to divide the hash space (default: 64)"
    },
    "riak\/core\/cluster_name": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "default",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Riak cluster name"
    },
    "riak\/erlang\/kernel_polling": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "true",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Enable kernel polling"
    },
    "riak\/erlang\/heart": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "false",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Enable heart node monitoring"
    },
    "riak\/package\/version\/minor": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "11",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Riak minor version",
      "description": "Minor version of Riak to install."
    },
    "riak\/kv\/storage_backend_options\/max_file_size": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "2147483648",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Maximum file size",
      "description": "Maximum size for a single Bitcask cask file."
    },
    "riak\/kv\/storage_backend_options\/log_file_size": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "268435456",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Log file size",
      "description": "Log file size in bytes."
    },
    "riak\/kv\/storage_backend_options\/log_files_in_group": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "8",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Log files in group"
    },
    "riak\/kv\/stats_urlpath": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Path for HTTP retrieval of statistics"
    },
    "riak\/package\/kernel\/inet_dist_listen_max": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "7999",
      "type": "string",
      "recipes": [

      ],
      "display_name": "Maximum port for Erlang node communication"
    }
  },
  "replacing": {

  },
  "dependencies": {
    "iptables": [

    ],
    "mercurial": [

    ],
    "erlang": [

    ]
  },
  "maintainer_email": "riak@basho.com",
  "groupings": {

  },
  "recommendations": {

  },
  "platforms": {
    "debian": [

    ],
    "ubuntu": [

    ]
  },
  "version": "0.11.0",
  "license": "Apache 2.0",
  "name": "riak",
  "suggestions": {

  },
  "recipes": {
    "riak::iptables": "Automatically configure iptables rules for Riak.",
    "riak": "Installs Riak",
    "riak::innostore": "Install and configure the Innostore backend.",
    "riak::autoconf": "Automatically configure nodes from chef-server information."
  }
}